

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed May 29 10:16:31 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0006                     _PORTB	set	6
   167     003F                     _RC7	set	63
   168     003E                     _RC6	set	62
   169     003D                     _RC5	set	61
   170     003C                     _RC4	set	60
   171     003B                     _RC3	set	59
   172     003A                     _RC2	set	58
   173     0039                     _RC1	set	57
   174     0038                     _RC0	set	56
   175     0047                     _RD7	set	71
   176     0046                     _RD6	set	70
   177     0045                     _RD5	set	69
   178     0088                     _TRISD	set	136
   179     0086                     _TRISB	set	134
   180     0087                     _TRISC	set	135
   181                           
   182                           	psect	cinit
   183     07FC                     start_initialization:	
   184                           ; #config settings
   185                           
   186     07FC                     __initialization:
   187     07FC                     end_of_initialization:	
   188                           ;End of C runtime variable initialization code
   189                           
   190     07FC                     __end_of__initialization:
   191     07FC  0183               	clrf	3
   192     07FD  120A  118A  2ECE   	ljmp	_main	;jump to C main() function
   193                           
   194                           	psect	cstackCOMMON
   195     0070                     __pcstackCOMMON:
   196     0070                     ?_data:
   197     0070                     ??_data:	
   198                           ; 1 bytes @ 0x0
   199                           
   200     0070                     ?_comm:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ??_comm:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ?_keypad:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ?_main:	
   210                           ; 1 bytes @ 0x0
   211                           
   212                           
   213                           ; 1 bytes @ 0x0
   214     0070                     	ds	2
   215     0072                     data@d:
   216     0072                     comm@command:	
   217                           ; 1 bytes @ 0x2
   218                           
   219                           
   220                           ; 1 bytes @ 0x2
   221     0072                     	ds	1
   222     0073                     ??_keypad:
   223     0073                     ??_main:	
   224                           ; 1 bytes @ 0x3
   225                           
   226                           
   227                           	psect	maintext
   228     06CE                     __pmaintext:	
   229                           ; 1 bytes @ 0x3
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 142 in file "keypad.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, pclath, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : B00/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   249 ;;      Params:         0       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0
   252 ;;      Totals:         0       0       0       0       0
   253 ;;Total ram usage:        0 bytes
   254 ;; Hardware stack levels required when called: 2
   255 ;; This function calls:
   256 ;;		_comm
   257 ;;		_data
   258 ;;		_keypad
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264     06CE                     _main:	
   265                           ;psect for function _main
   266                           
   267     06CE                     l721:	
   268                           ;incstack = 0
   269                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   270                           
   271                           
   272                           ;keypad.c: 144:     TRISB=0;
   273     06CE  1683               	bsf	3,5	;RP0=1, select bank1
   274     06CF  1303               	bcf	3,6	;RP1=0, select bank1
   275     06D0  0186               	clrf	6	;volatile
   276                           
   277                           ;keypad.c: 145:     TRISD=0;
   278     06D1  0188               	clrf	8	;volatile
   279     06D2                     l723:
   280                           
   281                           ;keypad.c: 146:     comm(0x38);
   282     06D2  3038               	movlw	56
   283     06D3  120A  118A  26A6  120A  118A  	fcall	_comm
   284     06D8                     l725:
   285                           
   286                           ;keypad.c: 147:     comm(0x0c);
   287     06D8  300C               	movlw	12
   288     06D9  120A  118A  26A6  120A  118A  	fcall	_comm
   289     06DE                     l727:
   290                           
   291                           ;keypad.c: 148:     comm(0x06);
   292     06DE  3006               	movlw	6
   293     06DF  120A  118A  26A6  120A  118A  	fcall	_comm
   294     06E4                     l729:
   295                           
   296                           ;keypad.c: 149:     comm(0x01);
   297     06E4  3001               	movlw	1
   298     06E5  120A  118A  26A6  120A  118A  	fcall	_comm
   299     06EA                     l731:
   300                           
   301                           ;keypad.c: 150:     comm(0x80);
   302     06EA  3080               	movlw	128
   303     06EB  120A  118A  26A6  120A  118A  	fcall	_comm
   304     06F0                     l733:
   305                           
   306                           ;keypad.c: 151:     data('k');
   307     06F0  306B               	movlw	107
   308     06F1  120A  118A  26BA  120A  118A  	fcall	_data
   309     06F6                     l735:
   310                           
   311                           ;keypad.c: 152:     data('e');
   312     06F6  3065               	movlw	101
   313     06F7  120A  118A  26BA  120A  118A  	fcall	_data
   314     06FC                     l737:
   315                           
   316                           ;keypad.c: 153:     data('y');
   317     06FC  3079               	movlw	121
   318     06FD  120A  118A  26BA  120A  118A  	fcall	_data
   319     0702                     l739:
   320                           
   321                           ;keypad.c: 154:     data('p');
   322     0702  3070               	movlw	112
   323     0703  120A  118A  26BA  120A  118A  	fcall	_data
   324     0708                     l741:
   325                           
   326                           ;keypad.c: 155:     data('a');
   327     0708  3061               	movlw	97
   328     0709  120A  118A  26BA  120A  118A  	fcall	_data
   329     070E                     l743:
   330                           
   331                           ;keypad.c: 156:     data('d');
   332     070E  3064               	movlw	100
   333     070F  120A  118A  26BA  120A  118A  	fcall	_data
   334     0714                     l745:
   335                           
   336                           ;keypad.c: 158:     {;keypad.c: 159:     comm(0xc0);
   337     0714  30C0               	movlw	192
   338     0715  120A  118A  26A6  120A  118A  	fcall	_comm
   339     071A                     l747:
   340                           
   341                           ;keypad.c: 160:     keypad();
   342     071A  120A  118A  2723  120A  118A  	fcall	_keypad
   343     071F  2F14               	goto	l745
   344     0720  120A  118A  2800   	ljmp	start
   345     0723                     __end_of_main:
   346                           
   347                           	psect	text1
   348     0723                     __ptext1:	
   349 ;; *************** function _keypad *****************
   350 ;; Defined at:
   351 ;;		line 46 in file "keypad.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, status,2, status,0, pclath, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   365 ;;      Params:         0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0
   367 ;;      Temps:          0       0       0       0       0
   368 ;;      Totals:         0       0       0       0       0
   369 ;;Total ram usage:        0 bytes
   370 ;; Hardware stack levels used: 1
   371 ;; Hardware stack levels required when called: 1
   372 ;; This function calls:
   373 ;;		_data
   374 ;; This function is called by:
   375 ;;		_main
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379     0723                     _keypad:	
   380                           ;psect for function _keypad
   381                           
   382     0723                     l677:	
   383                           ;incstack = 0
   384                           ; Regs used in _keypad: [wreg+status,2+status,0+pclath+cstack]
   385                           
   386                           
   387                           ;keypad.c: 48:     TRISC=0xF0;
   388     0723  30F0               	movlw	240
   389     0724  1683               	bsf	3,5	;RP0=1, select bank1
   390     0725  1303               	bcf	3,6	;RP1=0, select bank1
   391     0726  0087               	movwf	7	;volatile
   392     0727                     l679:
   393                           
   394                           ;keypad.c: 49:     RC0=1;RC1=0;RC2=0;RC3=0;
   395     0727  1283               	bcf	3,5	;RP0=0, select bank0
   396     0728  1303               	bcf	3,6	;RP1=0, select bank0
   397     0729  1407               	bsf	7,0	;volatile
   398     072A                     l681:
   399     072A  1087               	bcf	7,1	;volatile
   400     072B                     l683:
   401     072B  1107               	bcf	7,2	;volatile
   402     072C                     l685:
   403     072C  1187               	bcf	7,3	;volatile
   404     072D                     l687:
   405                           
   406                           ;keypad.c: 50:     if(RC4==1)
   407     072D  1E07               	btfss	7,4	;volatile
   408     072E  2F30               	goto	u11
   409     072F  2F31               	goto	u10
   410     0730                     u11:
   411     0730  2F38               	goto	l41
   412     0731                     u10:
   413     0731                     l689:
   414                           
   415                           ;keypad.c: 51:     {;keypad.c: 52:         data('7');
   416     0731  3037               	movlw	55
   417     0732  120A  118A  26BA  120A  118A  	fcall	_data
   418     0737                     l42:	
   419                           ;keypad.c: 53:         while(1);
   420                           
   421     0737                     l43:
   422     0737  2F37               	goto	l42
   423     0738                     l41:	
   424                           ;keypad.c: 54:     }
   425                           
   426                           
   427                           ;keypad.c: 55:     if(RC5==1)
   428     0738  1E87               	btfss	7,5	;volatile
   429     0739  2F3B               	goto	u21
   430     073A  2F3C               	goto	u20
   431     073B                     u21:
   432     073B  2F43               	goto	l45
   433     073C                     u20:
   434     073C                     l691:
   435                           
   436                           ;keypad.c: 56:     {;keypad.c: 57:         data('8');
   437     073C  3038               	movlw	56
   438     073D  120A  118A  26BA  120A  118A  	fcall	_data
   439     0742                     l46:	
   440                           ;keypad.c: 58:         while(1);
   441                           
   442     0742                     l47:
   443     0742  2F42               	goto	l46
   444     0743                     l45:	
   445                           ;keypad.c: 59:     }
   446                           
   447                           
   448                           ;keypad.c: 60:     if(RC6==1)
   449     0743  1F07               	btfss	7,6	;volatile
   450     0744  2F46               	goto	u31
   451     0745  2F47               	goto	u30
   452     0746                     u31:
   453     0746  2F4E               	goto	l49
   454     0747                     u30:
   455     0747                     l693:
   456                           
   457                           ;keypad.c: 61:     {;keypad.c: 62:         data('9');
   458     0747  3039               	movlw	57
   459     0748  120A  118A  26BA  120A  118A  	fcall	_data
   460     074D                     l50:	
   461                           ;keypad.c: 63:         while(1);
   462                           
   463     074D                     l51:
   464     074D  2F4D               	goto	l50
   465     074E                     l49:	
   466                           ;keypad.c: 64:     }
   467                           
   468                           
   469                           ;keypad.c: 65:     if(RC7==1)
   470     074E  1F87               	btfss	7,7	;volatile
   471     074F  2F51               	goto	u41
   472     0750  2F52               	goto	u40
   473     0751                     u41:
   474     0751  2F59               	goto	l53
   475     0752                     u40:
   476     0752                     l695:
   477                           
   478                           ;keypad.c: 66:     {;keypad.c: 67:         data('/');
   479     0752  302F               	movlw	47
   480     0753  120A  118A  26BA  120A  118A  	fcall	_data
   481     0758                     l54:	
   482                           ;keypad.c: 68:         while(1);
   483                           
   484     0758                     l55:
   485     0758  2F58               	goto	l54
   486     0759                     l53:	
   487                           ;keypad.c: 69:     }
   488                           
   489                           
   490                           ;keypad.c: 71:     RC0=0;RC1=1;RC2=0;RC3=0;
   491     0759  1007               	bcf	7,0	;volatile
   492     075A  1487               	bsf	7,1	;volatile
   493     075B  1107               	bcf	7,2	;volatile
   494     075C  1187               	bcf	7,3	;volatile
   495                           
   496                           ;keypad.c: 72:     if(RC4==1)
   497     075D  1E07               	btfss	7,4	;volatile
   498     075E  2F60               	goto	u51
   499     075F  2F61               	goto	u50
   500     0760                     u51:
   501     0760  2F68               	goto	l57
   502     0761                     u50:
   503     0761                     l697:
   504                           
   505                           ;keypad.c: 73:     {;keypad.c: 74:         data('4');
   506     0761  3034               	movlw	52
   507     0762  120A  118A  26BA  120A  118A  	fcall	_data
   508     0767                     l58:	
   509                           ;keypad.c: 75:         while(1);
   510                           
   511     0767                     l59:
   512     0767  2F67               	goto	l58
   513     0768                     l57:	
   514                           ;keypad.c: 76:     }
   515                           
   516                           
   517                           ;keypad.c: 77:     if(RC5==1)
   518     0768  1E87               	btfss	7,5	;volatile
   519     0769  2F6B               	goto	u61
   520     076A  2F6C               	goto	u60
   521     076B                     u61:
   522     076B  2F73               	goto	l61
   523     076C                     u60:
   524     076C                     l699:
   525                           
   526                           ;keypad.c: 78:     {;keypad.c: 79:         data('5');
   527     076C  3035               	movlw	53
   528     076D  120A  118A  26BA  120A  118A  	fcall	_data
   529     0772                     l62:	
   530                           ;keypad.c: 80:         while(1);
   531                           
   532     0772                     l63:
   533     0772  2F72               	goto	l62
   534     0773                     l61:	
   535                           ;keypad.c: 81:     }
   536                           
   537                           
   538                           ;keypad.c: 82:     if(RC6==1)
   539     0773  1F07               	btfss	7,6	;volatile
   540     0774  2F76               	goto	u71
   541     0775  2F77               	goto	u70
   542     0776                     u71:
   543     0776  2F7E               	goto	l65
   544     0777                     u70:
   545     0777                     l701:
   546                           
   547                           ;keypad.c: 83:     {;keypad.c: 84:         data('6');
   548     0777  3036               	movlw	54
   549     0778  120A  118A  26BA  120A  118A  	fcall	_data
   550     077D                     l66:	
   551                           ;keypad.c: 85:         while(1);
   552                           
   553     077D                     l67:
   554     077D  2F7D               	goto	l66
   555     077E                     l65:	
   556                           ;keypad.c: 86:     }
   557                           
   558                           
   559                           ;keypad.c: 87:     if(RC7==1)
   560     077E  1F87               	btfss	7,7	;volatile
   561     077F  2F81               	goto	u81
   562     0780  2F82               	goto	u80
   563     0781                     u81:
   564     0781  2F89               	goto	l69
   565     0782                     u80:
   566     0782                     l703:
   567                           
   568                           ;keypad.c: 88:     {;keypad.c: 89:         data('*');
   569     0782  302A               	movlw	42
   570     0783  120A  118A  26BA  120A  118A  	fcall	_data
   571     0788                     l70:	
   572                           ;keypad.c: 90:         while(1);
   573                           
   574     0788                     l71:
   575     0788  2F88               	goto	l70
   576     0789                     l69:	
   577                           ;keypad.c: 91:     }
   578                           
   579                           
   580                           ;keypad.c: 93:     RC0=0;RC1=0;RC2=1;RC3=0;
   581     0789  1007               	bcf	7,0	;volatile
   582     078A  1087               	bcf	7,1	;volatile
   583     078B  1507               	bsf	7,2	;volatile
   584     078C  1187               	bcf	7,3	;volatile
   585                           
   586                           ;keypad.c: 94:     if(RC4==1)
   587     078D  1E07               	btfss	7,4	;volatile
   588     078E  2F90               	goto	u91
   589     078F  2F91               	goto	u90
   590     0790                     u91:
   591     0790  2F98               	goto	l73
   592     0791                     u90:
   593     0791                     l705:
   594                           
   595                           ;keypad.c: 95:     {;keypad.c: 96:         data('1');
   596     0791  3031               	movlw	49
   597     0792  120A  118A  26BA  120A  118A  	fcall	_data
   598     0797                     l74:	
   599                           ;keypad.c: 97:         while(1);
   600                           
   601     0797                     l75:
   602     0797  2F97               	goto	l74
   603     0798                     l73:	
   604                           ;keypad.c: 98:     }
   605                           
   606                           
   607                           ;keypad.c: 99:     if(RC5==1)
   608     0798  1E87               	btfss	7,5	;volatile
   609     0799  2F9B               	goto	u101
   610     079A  2F9C               	goto	u100
   611     079B                     u101:
   612     079B  2FA3               	goto	l77
   613     079C                     u100:
   614     079C                     l707:
   615                           
   616                           ;keypad.c: 100:     {;keypad.c: 101:         data('2');
   617     079C  3032               	movlw	50
   618     079D  120A  118A  26BA  120A  118A  	fcall	_data
   619     07A2                     l78:	
   620                           ;keypad.c: 102:         while(1);
   621                           
   622     07A2                     l79:
   623     07A2  2FA2               	goto	l78
   624     07A3                     l77:	
   625                           ;keypad.c: 103:     }
   626                           
   627                           
   628                           ;keypad.c: 104:     if(RC6==1)
   629     07A3  1F07               	btfss	7,6	;volatile
   630     07A4  2FA6               	goto	u111
   631     07A5  2FA7               	goto	u110
   632     07A6                     u111:
   633     07A6  2FAE               	goto	l81
   634     07A7                     u110:
   635     07A7                     l709:
   636                           
   637                           ;keypad.c: 105:     {;keypad.c: 106:         data('3');
   638     07A7  3033               	movlw	51
   639     07A8  120A  118A  26BA  120A  118A  	fcall	_data
   640     07AD                     l82:	
   641                           ;keypad.c: 107:         while(1);
   642                           
   643     07AD                     l83:
   644     07AD  2FAD               	goto	l82
   645     07AE                     l81:	
   646                           ;keypad.c: 108:     }
   647                           
   648                           
   649                           ;keypad.c: 109:     if(RC7==1)
   650     07AE  1F87               	btfss	7,7	;volatile
   651     07AF  2FB1               	goto	u121
   652     07B0  2FB2               	goto	u120
   653     07B1                     u121:
   654     07B1  2FB9               	goto	l85
   655     07B2                     u120:
   656     07B2                     l711:
   657                           
   658                           ;keypad.c: 110:     {;keypad.c: 111:         data('-');
   659     07B2  302D               	movlw	45
   660     07B3  120A  118A  26BA  120A  118A  	fcall	_data
   661     07B8                     l86:	
   662                           ;keypad.c: 112:         while(1);
   663                           
   664     07B8                     l87:
   665     07B8  2FB8               	goto	l86
   666     07B9                     l85:	
   667                           ;keypad.c: 113:     }
   668                           
   669                           
   670                           ;keypad.c: 115:     RC0=0;RC1=0;RC2=0;RC3=1;
   671     07B9  1007               	bcf	7,0	;volatile
   672     07BA  1087               	bcf	7,1	;volatile
   673     07BB  1107               	bcf	7,2	;volatile
   674     07BC  1587               	bsf	7,3	;volatile
   675                           
   676                           ;keypad.c: 116:     if(RC4==1)
   677     07BD  1E07               	btfss	7,4	;volatile
   678     07BE  2FC0               	goto	u131
   679     07BF  2FC1               	goto	u130
   680     07C0                     u131:
   681     07C0  2FDA               	goto	l89
   682     07C1                     u130:
   683     07C1                     l713:
   684                           
   685                           ;keypad.c: 117:     {;keypad.c: 118:         data('o');
   686     07C1  306F               	movlw	111
   687     07C2  120A  118A  26BA  120A  118A  	fcall	_data
   688                           
   689                           ;keypad.c: 119:         data('n');
   690     07C7  306E               	movlw	110
   691     07C8  120A  118A  26BA  120A  118A  	fcall	_data
   692                           
   693                           ;keypad.c: 120:         data('/');
   694     07CD  302F               	movlw	47
   695     07CE  120A  118A  26BA  120A  118A  	fcall	_data
   696                           
   697                           ;keypad.c: 121:         data('c');
   698     07D3  3063               	movlw	99
   699     07D4  120A  118A  26BA  120A  118A  	fcall	_data
   700     07D9                     l90:	
   701                           ;keypad.c: 122:         while(1);
   702                           
   703     07D9                     l91:
   704     07D9  2FD9               	goto	l90
   705     07DA                     l89:	
   706                           ;keypad.c: 123:     }
   707                           
   708                           
   709                           ;keypad.c: 124:     if(RC5==1)
   710     07DA  1E87               	btfss	7,5	;volatile
   711     07DB  2FDD               	goto	u141
   712     07DC  2FDE               	goto	u140
   713     07DD                     u141:
   714     07DD  2FE5               	goto	l93
   715     07DE                     u140:
   716     07DE                     l715:
   717                           
   718                           ;keypad.c: 125:     {;keypad.c: 126:         data('0');
   719     07DE  3030               	movlw	48
   720     07DF  120A  118A  26BA  120A  118A  	fcall	_data
   721     07E4                     l94:	
   722                           ;keypad.c: 127:         while(1);
   723                           
   724     07E4                     l95:
   725     07E4  2FE4               	goto	l94
   726     07E5                     l93:	
   727                           ;keypad.c: 128:     }
   728                           
   729                           
   730                           ;keypad.c: 129:     if(RC6==1)
   731     07E5  1F07               	btfss	7,6	;volatile
   732     07E6  2FE8               	goto	u151
   733     07E7  2FE9               	goto	u150
   734     07E8                     u151:
   735     07E8  2FF0               	goto	l97
   736     07E9                     u150:
   737     07E9                     l717:
   738                           
   739                           ;keypad.c: 130:     {;keypad.c: 131:         data('=');
   740     07E9  303D               	movlw	61
   741     07EA  120A  118A  26BA  120A  118A  	fcall	_data
   742     07EF                     l98:	
   743                           ;keypad.c: 132:         while(1);
   744                           
   745     07EF                     l99:
   746     07EF  2FEF               	goto	l98
   747     07F0                     l97:	
   748                           ;keypad.c: 133:     }
   749                           
   750                           
   751                           ;keypad.c: 134:     if(RC7==1)
   752     07F0  1F87               	btfss	7,7	;volatile
   753     07F1  2FF3               	goto	u161
   754     07F2  2FF4               	goto	u160
   755     07F3                     u161:
   756     07F3  2FFB               	goto	l105
   757     07F4                     u160:
   758     07F4                     l719:
   759                           
   760                           ;keypad.c: 135:     {;keypad.c: 136:         data('+');
   761     07F4  302B               	movlw	43
   762     07F5  120A  118A  26BA  120A  118A  	fcall	_data
   763     07FA                     l102:	
   764                           ;keypad.c: 137:         while(1);
   765                           
   766     07FA                     l103:
   767     07FA  2FFA               	goto	l102
   768     07FB                     l105:
   769     07FB  0008               	return
   770     07FC                     __end_of_keypad:
   771                           
   772                           	psect	text2
   773     06BA                     __ptext2:	
   774 ;; *************** function _data *****************
   775 ;; Defined at:
   776 ;;		line 26 in file "keypad.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  d               1    wreg     unsigned char 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  d               1    2[COMMON] unsigned char 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         1       0       0       0       0
   792 ;;      Temps:          2       0       0       0       0
   793 ;;      Totals:         3       0       0       0       0
   794 ;;Total ram usage:        3 bytes
   795 ;; Hardware stack levels used: 1
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		_keypad
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804     06BA                     _data:	
   805                           ;psect for function _data
   806                           
   807                           
   808                           ;incstack = 0
   809                           ; Regs used in _data: [wreg]
   810                           ;data@d stored from wreg
   811     06BA  00F2               	movwf	data@d
   812     06BB                     l657:
   813                           
   814                           ;keypad.c: 26: void data(unsigned char d);keypad.c: 27: {;keypad.c: 28:     PORTB=d;
   815     06BB  0872               	movf	data@d,w
   816     06BC  1283               	bcf	3,5	;RP0=0, select bank0
   817     06BD  1303               	bcf	3,6	;RP1=0, select bank0
   818     06BE  0086               	movwf	6	;volatile
   819     06BF                     l659:
   820                           
   821                           ;keypad.c: 29:     RD5=1;
   822     06BF  1688               	bsf	8,5	;volatile
   823     06C0                     l661:
   824                           
   825                           ;keypad.c: 30:     RD6=0;
   826     06C0  1308               	bcf	8,6	;volatile
   827     06C1                     l663:
   828                           
   829                           ;keypad.c: 31:     RD7=1;
   830     06C1  1788               	bsf	8,7	;volatile
   831                           
   832                           ;keypad.c: 32:     _delay((unsigned long)((1)*(20000000/4000.0)));
   833     06C2  3007               	movlw	7
   834     06C3  00F1               	movwf	??_data+1
   835     06C4  307D               	movlw	125
   836     06C5  00F0               	movwf	??_data
   837     06C6                     u177:
   838     06C6  0BF0               	decfsz	??_data,f
   839     06C7  2EC6               	goto	u177
   840     06C8  0BF1               	decfsz	??_data+1,f
   841     06C9  2EC6               	goto	u177
   842     06CA                     l665:
   843                           
   844                           ;keypad.c: 33:     RD7=0;
   845     06CA  1283               	bcf	3,5	;RP0=0, select bank0
   846     06CB  1303               	bcf	3,6	;RP1=0, select bank0
   847     06CC  1388               	bcf	8,7	;volatile
   848     06CD                     l35:
   849     06CD  0008               	return
   850     06CE                     __end_of_data:
   851                           
   852                           	psect	text3
   853     06A6                     __ptext3:	
   854 ;; *************** function _comm *****************
   855 ;; Defined at:
   856 ;;		line 36 in file "keypad.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;  command         1    wreg     unsigned char 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  command         1    2[COMMON] unsigned char 
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       0       0       0       0
   871 ;;      Locals:         1       0       0       0       0
   872 ;;      Temps:          2       0       0       0       0
   873 ;;      Totals:         3       0       0       0       0
   874 ;;Total ram usage:        3 bytes
   875 ;; Hardware stack levels used: 1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883     06A6                     _comm:	
   884                           ;psect for function _comm
   885                           
   886                           
   887                           ;incstack = 0
   888                           ; Regs used in _comm: [wreg]
   889                           ;comm@command stored from wreg
   890     06A6  00F2               	movwf	comm@command
   891     06A7                     l667:
   892                           
   893                           ;keypad.c: 36: void comm(unsigned char command);keypad.c: 37: {;keypad.c: 38:     PORTB=
      +                          command;
   894     06A7  0872               	movf	comm@command,w
   895     06A8  1283               	bcf	3,5	;RP0=0, select bank0
   896     06A9  1303               	bcf	3,6	;RP1=0, select bank0
   897     06AA  0086               	movwf	6	;volatile
   898     06AB                     l669:
   899                           
   900                           ;keypad.c: 39:     RD5=0;
   901     06AB  1288               	bcf	8,5	;volatile
   902     06AC                     l671:
   903                           
   904                           ;keypad.c: 40:     RD6=0;
   905     06AC  1308               	bcf	8,6	;volatile
   906     06AD                     l673:
   907                           
   908                           ;keypad.c: 41:     RD7=1;
   909     06AD  1788               	bsf	8,7	;volatile
   910                           
   911                           ;keypad.c: 42:     _delay((unsigned long)((1)*(20000000/4000.0)));
   912     06AE  3007               	movlw	7
   913     06AF  00F1               	movwf	??_comm+1
   914     06B0  307D               	movlw	125
   915     06B1  00F0               	movwf	??_comm
   916     06B2                     u187:
   917     06B2  0BF0               	decfsz	??_comm,f
   918     06B3  2EB2               	goto	u187
   919     06B4  0BF1               	decfsz	??_comm+1,f
   920     06B5  2EB2               	goto	u187
   921     06B6                     l675:
   922                           
   923                           ;keypad.c: 43:     RD7=0;
   924     06B6  1283               	bcf	3,5	;RP0=0, select bank0
   925     06B7  1303               	bcf	3,6	;RP1=0, select bank0
   926     06B8  1388               	bcf	8,7	;volatile
   927     06B9                     l38:
   928     06B9  0008               	return
   929     06BA                     __end_of_comm:
   930     007E                     btemp	set	126	;btemp
   931     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_comm
    _main->_data
    _keypad->_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      45
                               _comm
                               _data
                             _keypad
 ---------------------------------------------------------------------------------
 (1) _keypad                                               0     0      0      15
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _comm                                                 3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _comm
   _data
   _keypad
     _data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed May 29 10:16:31 2024

                     l41 0738                       l50 074D                       l42 0737  
                     l35 06CD                       l51 074D                       l43 0737  
                     l61 0773                       l53 0759                       l45 0743  
                     l38 06B9                       l70 0788                       l62 0772  
                     l54 0758                       l46 0742                       l71 0788  
                     l63 0772                       l55 0758                       l47 0742  
                     l81 07AE                       l73 0798                       l65 077E  
                     l57 0768                       l49 074E                       l90 07D9  
                     l82 07AD                       l74 0797                       l66 077D  
                     l58 0767                       l91 07D9                       l83 07AD  
                     l75 0797                       l67 077D                       l59 0767  
                     l93 07E5                       l85 07B9                       l77 07A3  
                     l69 0789                       l94 07E4                       l86 07B8  
                     l78 07A2                       l95 07E4                       l87 07B8  
                     l79 07A2                       l97 07F0                       l89 07DA  
                     l98 07EF                       l99 07EF                       u10 0731  
                     u11 0730                       u20 073C                       u21 073B  
                     u30 0747                       u31 0746                       u40 0752  
                     u41 0751                       u50 0761                       u51 0760  
                     u60 076C                       u61 076B                       u70 0777  
                     u71 0776                       u80 0782                       u81 0781  
                     u90 0791                       u91 0790                      l102 07FA  
                    l103 07FA                      l105 07FB                      l701 0777  
                    l711 07B2                      l703 0782                      l713 07C1  
                    l705 0791                      l721 06CE                      l715 07DE  
                    l707 079C                      l731 06EA                      l723 06D2  
                    l661 06C0                      l717 07E9                      l709 07A7  
                    l741 0708                      l733 06F0                      l725 06D8  
                    l671 06AC                      l663 06C1                      l719 07F4  
                    l743 070E                      l735 06F6                      l727 06DE  
                    l673 06AD                      l665 06CA                      l657 06BB  
                    l681 072A                      l745 0714                      l737 06FC  
                    l729 06E4                      l675 06B6                      l667 06A7  
                    l659 06BF                      l691 073C                      l683 072B  
                    l747 071A                      l739 0702                      l669 06AB  
                    l693 0747                      l685 072C                      l677 0723  
                    l695 0752                      l687 072D                      l679 0727  
                    l697 0761                      l689 0731                      l699 076C  
                    _RC0 0038                      _RC1 0039                      _RC2 003A  
                    _RC3 003B                      _RC4 003C                      _RC5 003D  
                    u100 079C                      _RC6 003E                      u101 079B  
                    _RD5 0045                      _RC7 003F                      u110 07A7  
                    _RD6 0046                      u111 07A6                      _RD7 0047  
                    u120 07B2                      u121 07B1                      u130 07C1  
                    u131 07C0                      u140 07DE                      u141 07DD  
                    u150 07E9                      u151 07E8                      u160 07F4  
                    u161 07F3                      u177 06C6                      u187 06B2  
                   _data 06BA                     _comm 06A6                     _main 06CE  
                   btemp 007E                     start 0000                    ?_data 0070  
                  ?_comm 0070                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  data@d 0072                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_data 06CE             __end_of_comm 06BA  
           __end_of_main 0723                   ??_data 0070                   ??_comm 0070  
                 ??_main 0073                   _keypad 0723  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 06CE                  ?_keypad 0070  
                __ptext1 0723                  __ptext2 06BA                  __ptext3 06A6  
   end_of_initialization 07FC           __end_of_keypad 07FC      start_initialization 07FC  
               ??_keypad 0073                ___latbits 0002              comm@command 0072  
